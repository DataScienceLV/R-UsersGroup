motor.vehicle.scc
motor.vehicle.emissions.baltimore = NEI.DT[SCC %in% motor.vehicle.scc, sum(Emissions),
by = c("year", "fips")][fips == "24510"]
motor.vehicle.emissions.baltimore
setnames(motor.vehicle.emissions.baltimore,c("year","fips","V1"),c("year","fips","Emissions"))
motor.vehicle.emissions.baltimore
ggplot(motor.vehicle.emissions.baltimore, aes(year, Emissions))+
geom_point(color = "blue") + geom_line(color = "red") + labs(x = "Year") +
labs(y = expression("Total Emissions, PM"[2.5])) +
labs(title = "Total Emissions from Motor Vehicle Sources in Baltimore City")
dev.copy(png,file="./EDA_CourseProject2/plot5.png",width=480,height=480,units="px")
dev.off()
motor.vehicle.emissions = NEI.DT[SCC %in% motor.vehicle.scc, sum(Emissions),by = c("year", "fips")]
motor.vehicle.emissions
setnames(motor.vehicle.emissions,c("year","fips","V1"),c("year","fips","Emissions"))
motor.vehicle.emissions
ggplot(motor.vehicle.emissions[fips=="24510"|fips=="06037"],aes(year, Emissions))+
geom_point() + geom_line(aes(color = fips)) +
scale_color_discrete(name = "County",breaks = c("06037", "24510"),
labels = c("Los Angeles", "Baltimore")) +
labs(x = "Year") + labs(y = expression("Total Emissions, PM"[2.5])) +
labs(title = "Annual Motor Vehicle Emissions")
ggplot(motor.vehicle.emissions[fips=="24510"|fips=="06037"],aes(year, log(Emissions)))+
geom_point() + geom_line(aes(color = fips)) +
scale_color_discrete(name = "County",breaks = c("06037", "24510"),
labels = c("Los Angeles", "Baltimore")) +
labs(x = "Year") + labs(y = expression("Total Emissions, PM"[2.5])) +
labs(title = "Annual Motor Vehicle Emissions")
##Plot
ggplot(motor.vehicle.emissions[fips=="24510"|fips=="06037"],aes(year, Emissions))+
geom_point() + geom_line(aes(color = fips)) +
scale_color_discrete(name = "County",breaks = c("06037", "24510"),
labels = c("Los Angeles", "Baltimore")) +
labs(x = "Year") + labs(y = expression("Total Emissions, PM"[2.5])) +
labs(title = "Annual Motor Vehicle Emissions")
##Plot
ggplot(motor.vehicle.emissions[fips=="24510"|fips=="06037"],aes(year, Emissions))+
geom_point() + geom_line(aes(color = fips)) +
scale_color_discrete(name = "County",breaks = c("06037", "24510"),
labels = c("Los Angeles County", "Baltimore City")) +
labs(x = "Year") + labs(y = expression("Total Emissions, PM"[2.5])) +
labs(title = "Comparison of Annual Motor Vehicle Emissions")
dev.copy(png,file="./EDA_CourseProject2/plot6.png",width=480,height=480,units="px")
dev.off()
motor.vehicle.emissions.baltimore = NEI.DT[SCC %in% motor.vehicle.scc, sum(Emissions),
by = c("year", "fips")][fips == "24510"]
setnames(motor.vehicle.emissions,c("year","fips","V1"),c("year","fips","Emissions"))
setnames(motor.vehicle.emissions,c("year","V1"),c("year","Emissions"))
setnames(motor.vehicle.emissions.baltimore,c("year","V1"),c("year","Emissions"))
motor.vehicle.emissions.baltimore
##
motor.vehicle.emissions.baltimore = NEI.DT[SCC %in% motor.vehicle.scc, sum(Emissions),
by = c("year", "fips")][fips == "24510"]
motor.vehicle.emissions.baltimore
setnames(motor.vehicle.emissions.baltimore,c("year","fips","V1"),c("year","fips","Emissions"))
motor.vehicle.emissions.baltimore
getwd()
test_subj<-read.table("./GettingData_Project2/test/subject_test.txt",col.names=c("subject"))
train_subj<-read.table("./GettingData_Project2/train/subject_train.txt",col.names=c("subject"))
test_subj
head(test_subj, n=10)
tail(test_subj, n=10)
train_subj<-read.table("./GettingData_Project2/train/subject_train.txt",col.names=c("subject"))
head(train_subj, n=10)
merge_subj<-rbind(train_subj,test_subj)
head(merge_subj, n=10)
str(merge_subj)
getwd()
test_X<-read.table("./GettingData_Project2/test/X_test.txt")
train_X<-read.table("./GettingData_Project2/train/X_train.txt")
test_y<-read.table("./GettingData_Project2/test/y_test.txt",col.names=c("activityid"))
train_y<-read.table("./GettingData_Project2/train/y_train.txt",col.names=c("activityid"))
test_X
test_y
mergeX<-rbind(test_X,train_X)
mergeY<-rbind(test_y,train_y)
head(mergeX,n=10)
head(mergeY,n=10)
feature<-read.table("features.txt", col.names=c("featureid", "featurename"))
feature<-read.table("./GettingData_Project2/features.txt", col.names=c("featureid", "featurename"))
feature
idx<-grep("-mean\\(\\)|-std\\(\\)", feature$featurename)
names(X)<-feature[,2]
names(mergeX)<-feature[,2]
msd<-mergeX[,idx]
msd
head(msd,n=10)
head(msd,n=4)
subject_test<-read.table("./GettingData_Project2/test/subject_test.txt",col.names=c("subject"))
head(subject_test, n=10)
?read.tabel
?read.table
subject_train<-read.table("./GettingData_Project2/train/subject_train.txt",col.names=c("subject"))
head(subject_train, n=10)
merge_subj<-rbind(subject_train,subject_test)
head(merge_subj, n=10)
str(merge_subj)
X_test<-read.table("./GettingData_Project2/test/X_test.txt")
X_train<-read.table("./GettingData_Project2/train/X_train.txt")
y_test<-read.table("./GettingData_Project2/test/y_test.txt",col.names=c("activityid"))
y_train<-read.table("./GettingData_Project2/train/y_train.txt",col.names=c("activityid"))
mergeX<-rbind(X_test,X_train)
mergeY<-rbind(y_test,y_train)
head(mergeX,n=10)
head(mergeY,n=10)
?grep
feature<-read.table("./GettingData_Project2/features.txt", col.names=c("featureid", "featurename"))
idx<-grep("-mean\\(\\)|-std\\(\\)", feature$featurename)
names(mergeX)<-feature[,2]
mergeX
head(mergeX,n=10)
activities <- read.table("activity_labels.txt",col.names=c("activityid","activity"))
activities[, 2] = gsub("_", "", as.character(activities[, 2]))
activities <- read.table("./GettingData_Project2/activity_labels.txt",col.names=c("activityid","activity"))
activities[, 2] = gsub("_", "", as.character(activities[, 2]))
mergeY [,1] = activities[y[,1], 2]
names(mergeY) <- "activity"
head(mergeY,n=10)
tidyData<-cbind(merge_subj,mergeY,MSD)
feature<-read.table("./GettingData_Project2/features.txt", col.names=c("featureid", "featurename"))
idx<-grep("-mean\\(\\)|-std\\(\\)", feature$featurename)
names(mergeX)<-feature[,2]
MSD<-mergeX[,idx]
head(MSD,n=4)
activities <- read.table("./GettingData_Project2/activity_labels.txt",col.names=c("activityid","activity"))
activities[, 2] = gsub("_", "", as.character(activities[, 2]))
mergeY [,1] = activities[y[,1], 2]
names(mergeY) <- "activity"
tidyData<-cbind(merge_subj,mergeY,MSD)
names(tidyData)[2]<-paste("activity")
names(tidyData)<-gsub("\\(|\\)", "", names(tidyData))
write.table(tidyData,"./GettingData_Project2/tidyData.txt")
library(reshape2)
install.packages("reshape2")
install.packages("reshape2")
tidyData1<-cbind(merge_subj,mergeY,MSD)
names(tidyData1)[2]<-paste("activity")
names(tidyData1)<-gsub("\\(|\\)", "", names(tidyData1))
write.table(tidyData1,"./GettingData_Project2/tidyData1.txt")
tidyData2<-melt(tidyData,id=c("subject","activity"))
z<-dcast(tidyData2,subject+activity ~ variable,mean)
View(z)
write.csv(z, file= "./GettingData_Project2/tidyData2.txt", row.names=FALSE)
View(tidyData1)
write.table(z, file= "./GettingData_Project2/tidyData2.txt", row.names=FALSE)
View(tidyData2)
View(tidyData1)
View(tidyData2)
tidyData1<-cbind(merge_subj,mergeY,MSD)
names(tidyData1)[2]<-paste("activity")
names(tidyData1)<-gsub("\\(|\\)", "", names(tidyData1))
write.table(tidyData1,"./GettingData_Project2/tidyData1.txt")
View(tidyData1)
tidyData2<-melt(tidyData1,id=c("subject","activity"))
z<-dcast(tidyData2,subject+activity ~ variable,mean)
write.table(z, file= "./GettingData_Project2/tidyData2.txt", row.names=FALSE)
View(tidyData2)
count<-0
while(count<0){
print(count)
count<-count+1
}
f<-function(x,y){
x+y
}
f(2,3)
f(2,3)
f(2,3)
args(lm)
args(paste)
paste("a","B", sep" ")
paste("a","B", sep=" ")
activity<-read.csv("activity.csv")
setwd("C:/Users/Nathan/RepData_PeerAssessment1")
activity<-read.csv("activity.csv")
head(activity)
summary(activity)
str(activity)
View(activity)
columMean<-function(y){
nc<-ncol(y)
means<-numeric(nc)
for(i in 1:nc){
means[i]<-mean(y[,i])
means
}
}
columMnean(airquality)
columMean(airquality)
columMean<-function(y){
nc<-ncol(y)
means<-numeric(nc)
for(i in 1:nc){
means[i]<-mean(y[,i])
}
means
}
columMean(airquality)
columMean<-function(y, na.rm=TRUE){
nc<-ncol(y)
means<-numeric(nc)
for(i in 1:nc){
means[i]<-mean(y[,i])
}
means
}
columMean(airquality)
columMean<-function(y, removeNA=TRUE){
nc<-ncol(y)
means<-numeric(nc)
for(i in 1:nc){
means[i]<-mean(y[,i])
}
means
}
columMean(airquality)
columMean<-function(y, na.rm=TRUE){
nc<-ncol(y)
means<-numeric(nc)
for(i in 1:nc){
means[i]<-mean(y[,i])
}
means
}
columMean(airquality)
columMean(airquality, na.rm=TRUE)
search()
install.packages("dplyr")
search()
library(dplyr)
search()
x<-as.matrix(1:4,2,2)
x
x<-matrix(1:4,2,2)
x
x<-as.Date("1986-11-01")
x
x<-Sys.time()
x
p<-POSIXlt(x)
p<-as.POSIXlt(x)
p
names(p)
names(unclass(p))
p$sec
p$hour
p$mon
x<-1:10
if(x>5){
x<-0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z<-10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
15003/9
18000/9
12+12+15+15+29
12+12+15+15+40
12+12+15+15+29
getwd()
setwd(~/)
setwd(~)
setwd("~")
getwd()
pollutantmean<-function(directory, pollutant, id=1:332){
files_full<-list.files(directory, full.names=TRUE)
dat<-data.frame()
for ( i in id){
dat<-rbind(dat,read.csv(files_full[i]) )
}
subset_id<-subset(dat, ID=id)
pollutantsubset<-subset_id[ ,pollutant]
round(mean(pollutantsubset, na.rm=TRUE),3)
}
?source
getwd()
source("polutantmean.R")
source("poLlutantmean.R")
source("pollutantmean.R")
pollutantmean("specdata","sulfate", id=1:10)
args(source)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
files_full<-list.files("~/specdata", full.names=TRUE)
files_full
str(files_full)
source("submitscript1.R")
submit()
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
source("submitscript1.R")
submit()
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
source("submitscript1.R")
submit()
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
source("submitscript1.R")
submit()
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("submitscript1.R")
submit()
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("submitscript1.R")
submit()
source("submitscript1.R")
submit()
?round()
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("submitscript1.R")
submit()
x<-list(a=1:4)
x
x<-list(a=1:4, b=rnorm(10))
x
mean(x)
lappy(x, mean)
lapply(x, mean)
sapply(x, mean)
y<-lapply(x, mean)
z<-sapply(x, mean)
str(y)
str(z)
class(z)
class(z)
class(y)
x<-matrix(rnorm(200),20,10)
x
colSums(x)
colMeans(x)
rowSums(x)
rowMeans9(x)
rowMeans(x)
rowMeans(x, dims=2)
rowMeans(x, dims=1)
?gl
x<-c(rnorm(10), runif(10), rnorm(10,1))
f<-gl(3,10)
f
split(x,f)
lapply(f$1, mean)
lapply(z, mean)
z<-split(x,f)
lapply(z, mean)
library(datasets)
head(airquality)
library(dplyr)
summarize(airquality, Month)
group_by(airquality, Month)
x<-group_by(airquality, Month)
summarize(x, meanTemp=mean(Temp))
summarize(x, meanTemp=mean(Temp),meanOzone=mean(Ozone),meanSolar=mean(Solar.R))
summarize(x, meanTemp=mean(Temp),meanOzone=mean(Ozone,na.rm=TRUE),meanSolar=mean(Solar.R))
summarize(x, meanTemp=mean(Temp),meanOzone=mean(Ozone,na.rm=TRUE),
meanSolar=mean(Solar.R,na.rm=TRUE))
summarize(x, meanTemp=mean(Temp),meanOzone=mean(Ozone,na.rm=TRUE),
meanSolar=mean(Solar.R,na.rm=TRUE),meanWind=mean(Wind,na.rm=TRUE))
table(x)
table(x, n=10)
head(table(x))
str(x)
summarize(x, mapply(mean, Ozone:Temp,na.rm=TRUE))
summarize(x, meanTemp=mean(Temp),meanOzone=mean(Ozone,na.rm=TRUE),
meanSolar=mean(Solar.R,na.rm=TRUE),meanWind=mean(Wind,na.rm=TRUE))
summarize(x, mapply(mean, Ozone:Temp,na.rm=TRUE))
summarize(x, mapply(mean, Ozone:Temp))
summarize(x, mean)
mapply(x, mean)
mapply(x, mean(Ozone))
mapply(x, mean(Ozone:Temp))
meanValues<-function(x){
y<-summarize(x, meanTemp=mean(Temp),meanOzone=mean(Ozone,na.rm=TRUE),
meanSolar=mean(Solar.R,na.rm=TRUE),meanWind=mean(Wind,na.rm=TRUE))
print(y)
}
meanValues(x)
meanValues<-function(x){
y<-summarize(x, meanTemp=mean(Temp),meanOzone=mean(Ozone,na.rm=TRUE),
meanSolar=mean(Solar.R,na.rm=TRUE),meanWind=mean(Wind,na.rm=TRUE))
print(y)
invisible(y)
}
meanValues(x)
meanValues<-function(x){
y<-summarize(x, meanTemp=mean(Temp),meanOzone=mean(Ozone,na.rm=TRUE),
meanSolar=mean(Solar.R,na.rm=TRUE),meanWind=mean(Wind,na.rm=TRUE))
}
meanValues(x)
meanValues<-function(x){
y<-summarize(x, meanTemp=mean(Temp),meanOzone=mean(Ozone,na.rm=TRUE),
meanSolar=mean(Solar.R,na.rm=TRUE),meanWind=mean(Wind,na.rm=TRUE))
print(y)
}
meanValues(x)
```{r}
library(knitr)
library(ggplot2)
library (plyr)
library(reshape)
```
install.packages("knitr")
install.packages("ggplot2")
install.packages ("plyr")
install.packages("reshape")
install.packages("knitr")
install.packages("ggplot2")
install.packages("plyr")
install.packages("knitr")
install.packages("ggplot2")
install.packages ("plyr")
install.packages("reshape")
getwd()
crime<-read.csv("C:/Users/Nathan/Dropbox/Big Data/Leada/CrimeData/Crime_SanFrancisco/SFPD_Incidents.csv")
str(crime)
summary(crime)
summary(crime)
names(crime)
hist(crime$category)
traceback()
str(crime$category)
str(crime)
hist(crime$Category)
View(crime)
summary(crime$category)
summary(crime$Category)
summary(crime$Category)
describe(crime$Category)
1038000+300000+50000
install.pacakges("rtools")
install.packages("rtools")
install.packages("rtools")
library(devtools)
install_github("ramnathv/rCharts@dev")
library(devtools)
install_github("ramnathv/rCharts@dev")
418-50
450-50-118
install.packages("shiny")
library(shiny)
install.packages("devtools")
install.packages("devtools")
library(devtools)
install_github('slidify', 'ramnathv')
install_github('slidifyLibraries', 'ramnathv')
library(slidify)
getwd()
author('test')
slidify('index.html')
browseURL('index.html')
setwd("C:/Users/Nathan/Dropbox/DataScienceLV/R-UsersGroup/1st_Meetup")
list.files()
publish
publish(title = 'kick-off', 'LVRUG.html', host = 'rpubs')
publish(title = 'kick-off', 'LVRUG1.html', host = 'rpubs')
install.packages("RCurl")
install.packages("RCurl")
library(RCurl)
publish(title = 'kick-off', 'LVRUG1.html', host = 'rpubs')
publish(user = "DataScienceLV", repo = "datasciencelv.github.io")
getwd()
publish(user = "DataScienceLV", repo = "datasciencelv.github.io", mode="selfcontained")
publish(user = "DataScienceLV", repo = "datasciencelv.github.io", mode='selfcontained')
publish(user = "DataScienceLV", repo = "datasciencelv.github.io")
